import{C as m,r as T,u as n,x as l,z as p}from"./chunk-JEBJIWP7.js";import{Za as y,k as u,u as d,x as h}from"./chunk-TPGHJTJC.js";import{g as e}from"./chunk-PM2M367S.js";var C=class g{constructor(s,t){this._http=s;this._firestore=t;this.getTasksDatabase()}getCategoriesDatabase(){return e(this,null,function*(){let t=this._http.get("./CategoriesDB/default-database.json");return(yield u(t)).categories})}getTasksDatabase(){return e(this,null,function*(){let t=this._http.get("./CategoriesDB/default-database.json");return(yield u(t)).tasks})}getTask(s,t){return e(this,null,function*(){try{let r=(yield this.getTasksDatabase()).find(c=>c.uuid===s);if(r)return r;let o=n(this._firestore,"Familly",t,"UserDatabase"),i=p(o,m("uuid","==",s)),f=yield l(i);if(!f.empty)return f.docs[0].data();throw new Error("Task not found in both local database and Firestore")}catch(a){throw console.error("Error fetching task:",a),new Error("Failed to fetch task.")}})}getAllCategories(s){return e(this,null,function*(){try{let t=yield this.getCategoriesDatabase(),a=n(this._firestore,"Familly",s,"Categories"),o=(yield l(a)).docs.map(i=>i.data());return[...t,...o]}catch(t){throw console.error("Error fetching all categories:",t),new Error("Failed to fetch categories.")}})}getAllTasksByCategory(s,t){return e(this,null,function*(){try{let r=(yield this.getTasksDatabase()).filter(k=>k.categoryUuid===s),o=n(this._firestore,"Familly",t,"UserDatabase"),i=p(o,m("categoryUuid","==",s)),c=(yield l(i)).docs.map(k=>k.data());return[...r,...c]}catch(a){throw console.error("Error fetching tasks by category:",a),new Error("Failed to fetch tasks.")}})}static \u0275fac=function(t){return new(t||g)(h(y),h(T))};static \u0275prov=d({token:g,factory:g.\u0275fac,providedIn:"root"})};export{C as a};
